[{"C:\\Users\\nolan\\Desktop\\alabian\\lanrebada\\day14-react\\react-class\\myQuizApp\\quizApp\\quiz_app\\src\\App.js":"1","C:\\Users\\nolan\\Desktop\\alabian\\lanrebada\\day14-react\\react-class\\myQuizApp\\quizApp\\quiz_app\\src\\index.js":"2","C:\\Users\\nolan\\Desktop\\alabian\\lanrebada\\day14-react\\react-class\\myQuizApp\\quizApp\\quiz_app\\src\\components\\Home.jsx":"3","C:\\Users\\nolan\\Desktop\\alabian\\lanrebada\\day14-react\\react-class\\myQuizApp\\quizApp\\quiz_app\\src\\components\\Subjects.jsx":"4","C:\\Users\\nolan\\Desktop\\alabian\\lanrebada\\day14-react\\react-class\\myQuizApp\\quizApp\\quiz_app\\src\\components\\English.jsx":"5","C:\\Users\\nolan\\Desktop\\alabian\\lanrebada\\day14-react\\react-class\\myQuizApp\\quizApp\\quiz_app\\src\\utils\\is-empty.js":"6"},{"size":4823,"mtime":1607269650189,"results":"7","hashOfConfig":"8"},{"size":270,"mtime":1607461700842,"results":"9","hashOfConfig":"8"},{"size":4692,"mtime":1607257920500,"results":"10","hashOfConfig":"8"},{"size":6537,"mtime":1607503191650,"results":"11","hashOfConfig":"8"},{"size":10007,"mtime":1607503562843,"results":"12","hashOfConfig":"8"},{"size":239,"mtime":1607457610374,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"87cez",{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},"C:\\Users\\nolan\\Desktop\\alabian\\lanrebada\\day14-react\\react-class\\myQuizApp\\quizApp\\quiz_app\\src\\App.js",[],"C:\\Users\\nolan\\Desktop\\alabian\\lanrebada\\day14-react\\react-class\\myQuizApp\\quizApp\\quiz_app\\src\\index.js",[],["30","31"],"C:\\Users\\nolan\\Desktop\\alabian\\lanrebada\\day14-react\\react-class\\myQuizApp\\quizApp\\quiz_app\\src\\components\\Home.jsx",[],["32","33"],"C:\\Users\\nolan\\Desktop\\alabian\\lanrebada\\day14-react\\react-class\\myQuizApp\\quizApp\\quiz_app\\src\\components\\Subjects.jsx",[],"C:\\Users\\nolan\\Desktop\\alabian\\lanrebada\\day14-react\\react-class\\myQuizApp\\quizApp\\quiz_app\\src\\components\\English.jsx",["34"],"import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Helmet } from 'react-helmet';\r\nimport M from 'materialize-css'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Modal, Button } from 'react-bootstrap';\r\nimport '../Styles/english.css';\r\nimport '../assets/fonts/fonts.css';\r\nimport badaDev from '../assets/images/badaDev.png';\r\nimport '../assets/font_awesome/css/font-awesome.min.css';\r\nimport english from './questions/english.json';\r\n// import isEmpty from '../utils/is-empty.js';\r\n\r\nclass English extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n            english,\r\n            currentQuestion: {},\r\n            nextQuestion: {},\r\n            prevQuestion: {},\r\n            answer: \"\",\r\n            numberofQuestion: 0,\r\n            numberofAnsweredQuestions: 0,\r\n            currentQuestionIndex: 0,\r\n            score: 0,\r\n            correctAnswer: 0,\r\n            wrongAnswers: 0,\r\n            timer: {}\r\n       }\r\n    }\r\n    \r\n    // isEMpty = (value) => {\r\n    //    if (value === undefined ||\r\n    //     value === null ||\r\n    //     (typeof value === Object && Object.keys(value).length === 0) ||\r\n    //     (typeof value === String && value.trim().length === 0));\r\n    // }\r\n\r\n    displayQuestions = (english = this.state.english, currentQuestion, nextQuestion, prevQuestion) => {\r\n        //destructure the currentQuestionIndex\r\n        let { currentQuestionIndex } = this.state;\r\n        //check if our question array is empty\r\n        if (this.state.english !== undefined || this.state.english !== null || (typeof this.state.english !== Object\r\n            && Object.keys(this.state.english).length !== 0) || (typeof this.state.english !== String\r\n                && this.state.english.trim().length !== 0)) {\r\n            english = this.state.english;\r\n            currentQuestion = english[currentQuestionIndex];\r\n            nextQuestion = english[currentQuestionIndex + 1];\r\n            prevQuestion = english[currentQuestionIndex - 1];\r\n            const answer = currentQuestion.answer;\r\n            //now we want to update our state\r\n            this.setState({\r\n                currentQuestion,\r\n                nextQuestion,\r\n                prevQuestion,\r\n                numberofQuestion: english.length,\r\n                answer\r\n            })\r\n        }\r\n    };\r\n    componentDidMount() {\r\n        const { english, currentQuestion, nextQuestion, prevQuestion } = this.state;\r\n        this.displayQuestions(english, currentQuestion, nextQuestion, prevQuestion);\r\n    };\r\n/*because this fxn was called as an event handler it has access to the event that was \r\n  called so we just put in the parameter \"e\" */ \r\n    handleOptionClicked = (e) => {\r\n        if (e.target.innerHTML.toLowerCase() === this.state.answer.toLocaleLowerCase()) {\r\n            this.correctAnswer();\r\n        } else {\r\n            this.wrongAnswer();\r\n        }\r\n    }\r\n\r\n    //next button function\r\n    handleNextButton = () => {\r\n        if (this.state.nextQuestion !== undefined) {\r\n            this.setState(prevState => ({\r\n                currentQuestionIndex: prevState.currentQuestionIndex + 1\r\n            }), () => {\r\n                this.displayQuestions(\r\n                    this.state.english, \r\n                    this.state.currentQuestion, \r\n                    this.state.nextQuestion, \r\n                    this.state.prevQuestion); //calling this fxn here will display the next question\r\n            }); \r\n        }\r\n    }\r\n\r\n    //previous button function\r\n    handlePrevButton = () => {\r\n        if (this.state.prevQuestion !== undefined) {\r\n            this.setState(prevState => ({\r\n                currentQuestionIndex: prevState.currentQuestionIndex - 1\r\n            }), () => {\r\n                this.displayQuestions(\r\n                    this.state.english, \r\n                    this.state.currentQuestion, \r\n                    this.state.nextQuestion, \r\n                    this.state.prevQuestion); //calling this fxn here will display the next question\r\n            }); \r\n        }\r\n    }\r\n\r\n    //once the quit button is clicked it should take the user back to the homepage\r\n    handleQuitButton =() => {\r\n        if (window.confirm('Are you sure you want to quit?')) {\r\n            this.props.history.push('/');\r\n        }\r\n    } \r\n\r\n    correctAnswer = () => {\r\n        M.toast({\r\n            html: 'Correct Answer',\r\n            classes: 'toast-valid',\r\n            displayLenght: 2000\r\n        });\r\n        this.setState(prevState => ({\r\n            score: prevState.score + 1,\r\n            correctAnswer: prevState.correctAnswer + 1,\r\n            currentQuestionIndex: prevState.currentQuestionIndex + 1,\r\n            numberofAnsweredQuestions: prevState.numberofAnsweredQuestions + 1\r\n        }), () => {\r\n            this.displayQuestions(\r\n                this.state.english, \r\n                this.state.currentQuestion, \r\n                this.state.nextQuestion, \r\n                this.state.prevQuestion); //calling this fxn here will display the next question\r\n        });\r\n    }\r\n\r\n    wrongAnswer = () => {\r\n        navigator.vibrate(1000);\r\n        M.toast({\r\n            html: 'Wrong Answer',\r\n            classes: 'toast-invalid',\r\n            displayLenght: 2000\r\n        });\r\n        this.setState(prevState => ({\r\n            wrongAnswers: prevState.correctAnswers + 1,\r\n            currentQuestionIndex: prevState.currentQuestionIndex + 1,\r\n            numberofAnsweredQuestions: prevState.numberofAnsweredQuestions + 1\r\n        }), () => {\r\n            this.displayQuestions(\r\n                this.state.english, \r\n                this.state.currentQuestion, \r\n                this.state.nextQuestion, \r\n                this.state.prevQuestion); //calling this fxn here will display the next question\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { currentQuestion, currentQuestionIndex } = this.state;\r\n        return (\r\n            <div>\r\n                <Helmet><title>badaDev Quiz Portal</title></Helmet>\r\n                <div id=\"english\">\r\n                    <div id=\"eng_banner\" className=\"container-fluid\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-6\">\r\n                                <Link to='/'>\r\n                                    <img src={badaDev} className=\"w-25\" alt=\"\"/>\r\n                                </Link>\r\n                            </div>\r\n\r\n                            <div className=\"col-md-6\">\r\n                                <h1 className=\"heading_3\">Quiz Portal</h1>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"container questions\">\r\n                        <div className=\"container-fluid lifeline\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-6\">\r\n                                    <span className=\"no_of-ques text-success\">{currentQuestionIndex + 1} of 10</span>\r\n                                </div>\r\n\r\n                                <div className=\"col-6 text-right\">\r\n                                    <span className=\"fa fa-clock-o timer text-success\">3</span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"container-fluid questions_container\">\r\n                            <h5 className=\"text-muted\">\r\n                                {currentQuestion.question}\r\n                            </h5>\r\n                        </div>\r\n                        <div className=\"container-fluid options-container\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-6 options_container\">\r\n                                    <Button onClick={this.handleOptionClicked} className=\"options d-block w-75 mx-auto my-2\">\r\n                                        {currentQuestion.optionA}\r\n                                    </Button>\r\n                                    <Button onClick={this.handleOptionClicked} className=\"options d-block w-75 mx-auto my-2\">\r\n                                        {currentQuestion.optionB}\r\n                                    </Button>\r\n                                </div>\r\n                                <div className=\"col-md-6 options_container\">\r\n                                    <Button onClick={this.handleOptionClicked} className=\"options d-block w-75 mx-auto my-2\">\r\n                                        {currentQuestion.optionC}\r\n                                    </Button>\r\n                                    <Button onClick={this.handleOptionClicked} className=\"options d-block w-75 mx-auto my-2\">\r\n                                        {currentQuestion.optionD}\r\n                                    </Button>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row btn-container mt-3\">\r\n                                <Button className=\"bg-secondary ml-3\" onClick={this.handlePrevButton}>Previous</Button>\r\n                                <Button className=\"bg-success ml-3\" onClick={this.handleNextButton}>Next</Button>\r\n                                <Button className=\"bg-danger ml-3\" onClick={this.handleQuitButton}>Quit</Button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <footer className=\"container-fluid eng-footer\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 text-right\">\r\n                                <span className=\"fa fa-copyright\">Designed by badaDev</span>\r\n                            </div>\r\n                        </div>\r\n                    </footer>\r\n\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\n\r\n\r\nexport default English;","C:\\Users\\nolan\\Desktop\\alabian\\lanrebada\\day14-react\\react-class\\myQuizApp\\quizApp\\quiz_app\\src\\utils\\is-empty.js",["35"],"const isEMpty = (value) => {\r\n    value === undefined ||\r\n    value === null ||\r\n    (typeof value === Object && Object.keys(value).length === 0) ||\r\n    (typeof value === String && value.trim().length === 0);\r\n}\r\n\r\nexport default isEMpty;",{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","replacedBy":"39"},{"ruleId":"36","replacedBy":"40"},{"ruleId":"38","replacedBy":"41"},{"ruleId":"42","severity":1,"message":"43","line":6,"column":10,"nodeType":"44","messageId":"45","endLine":6,"endColumn":15},{"ruleId":"46","severity":2,"message":"47","line":2,"column":5,"nodeType":"48","messageId":"49","endLine":5,"endColumn":60},"no-native-reassign",["50"],"no-negated-in-lhs",["51"],["50"],["51"],"no-unused-vars","'Modal' is defined but never used.","Identifier","unusedVar","no-unused-expressions","Expected an assignment or function call and instead saw an expression.","ExpressionStatement","unusedExpression","no-global-assign","no-unsafe-negation"]